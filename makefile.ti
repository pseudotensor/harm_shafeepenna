#
#
#echo "Make sure MPICH params set in both global.h and makefile!"
#echo "Make sure MPICH params set in both global.h and makefile!"
USEINT=1
USEGCC=0

PREP = prep
CMD=grmhd

ifeq ($(USEINT),1)
LCC=efc # need to link right
CC = ecc # C compiler
#CC = ecpc # C++ compiler
# below always works, kinda slow
#CFLAGS=-I/usr/local/vmi/mpich/include
# below fastest settings fail to work
CFLAGS=-I/usr/local/vmi/mpich/include -O3 -ipo -unroll -IPF_fma -IPF_fltacc -IPF_fp_speculationfast -w1
# below is fastest that works
#CFLAGS=-I/usr/local/vmi/mpich/include -O2 -unroll -ftz  -IPF_fma -IPF_fltacc -IPF_fp_speculationfast -w1
# below definitely slower
#CFLAGS=-I/usr/local/vmi/mpich/include -O1 -w1
# below is to profile
#CFLAGS=-I/usr/local/vmi/mpich/include -prof_gen
#CFLAGS=-I/usr/local/vmi/mpich/include -prof_use -ipo
# LD_LIBRARY_PATH must be set too
# below for IA64
#LDFLAGS=-L/usr/local/intel/mkl/lib/64 -lmkl_lapack -lmkl_itp  -L/usr/local/vmi/mpich/lib/intel -lmpich -lvmi -ldl -lpthread
# use below when using -prof_gen
LDFLAGS=-L/usr/local/intel/mkl/lib/64 -lmkl_lapack -lmkl_itp  -L/usr/local/vmi/mpich/lib/intel -lmpich -lvmi -ldl -lpthread -lirc
LDFLAGS=-L/usr/local/vmi/mpich/lib/intel -lm -lF90 -lirc -lmpich -lvmi -lpthread -ldl
#LDFLAGS=-L/usr/local/intel/mkl/lib/64 -lF90 -lmkl_itp -lmkl_lapack -L/usr/local/vmi/mpich/lib/intel -lmpich -lvmi -ldl -lpthread
#LDFLAGS=-L/usr/local/intel/mkl/lib/64  -lF90 -lmkl_vml_itp -lmkl_itp -lmkl_lapack  -L/usr/local/vmi/mpich/lib/intel -lmpich -lvmi -ldl -lpthread
#LDFLAGS=-L/usr/local/intel/mkl/lib/64 -lF90 -lmkl -lmkl_lapack -L/usr/local/vmi/mpich/lib/intel -lmpich -lvmi -ldl -lpthread
#LDFLAGS=-L/usr/local/intel/mkl/lib/64 -lF90 -L/usr/apps/math/blas/lapack/intel -lblas_intel64 -llapack_intel64 -L/usr/local/vmi/mpich/lib/intel -lmpich -lvmi -ldl -lpthread

# /usr/apps/math/blas/lapack/intel
# /usr/local/intel/mkl/lib/64
endif

ifeq ($(USEGCC),1)
LCC =g77
CC = gcc
CFLAGS = -I/usr/local/vmi/mpich/include -Wall -O3 -ffast-math -finline-functions -funroll-loops
LDFLAGS = -lm -L/usr/apps/math/lapack/intel -lblas_intel32 -llapack_intel32 -ltmglib_intel32 -L/usr/local/vmi/mpich/lib/gcc -lmpich -lvmi -ldl -lpthread
endif



SRCS = \
bounds.c boundsint.c coord.c diag.c dudp_calc_3vel.c dudp_calc.c dump.c fixup.c gaussj.c \
image.c initbase.c init.c interp.c lubksb.c ludcmp.c main.c metric.c \
mnewt.c nrutil.c phys.c ranc.c restart.c set_arrays.c set_grid.c \
step_ch.c tensor.c utoprim.c vchar.c transforms.c fail.c utoprim_ldz.c \
init_mpi.c boundmpi.c boundmpiint.c sources.c

OBJS = \
bounds.o boundsint.o coord.o diag.o dudp_calc_3vel.o dudp_calc.o dump.o fixup.o gaussj.o \
image.o initbase.o init.o interp.o lubksb.o ludcmp.o main.o metric.o \
mnewt.o nrutil.o phys.o ranc.o restart.o set_arrays.o set_grid.o \
step_ch.o tensor.o utoprim.o vchar.o transforms.o fail.o utoprim_ldz.o \
init_mpi.o boundmpi.o boundmpiint.o sources.o

all:	$(PREP) $(CMD)


$(PREP):
	( sh ./makedecs.h.sh )
	( sh ./makempidecs.h.sh )

$(CMD):	$(OBJS) makefile.pt
	$(CC) $(CFLAGS) -o $(CMD) $(OBJS) $(LDFLAGS)


clean:
	rm *.o

# dependencies
$(OBJS) : global.h defs.h mympi.h mpidefs.h makefile.pt
metric.o : metric.h
transforms.o : metric.h

OBJB = postmort.o \
bounds.o coord.o diag.o dudp_calc.o dump.o fixup.o gaussj.o \
image.o init.o interp.o lubksb.o ludcmp.o metric.o \
mnewt.o nrutil.o phys.o ranc.o restart.o set_arrays.o set_grid.o \
step_ch.o tensor.o utoprim.o vchar.o transforms.o \
init_mpi.o boundmpi.o prepostinit.o cool.o

# dependencies
$(OBJB) : global.h defs.h mympi.h mpidefs.h makefile.pt


postmort: $(OBJB) makefile.pt
	$(CC) $(CFLAGS) -o postmort $(OBJB) $(LDFLAGS)


